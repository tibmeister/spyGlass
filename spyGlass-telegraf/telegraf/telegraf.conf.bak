# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "60s"
  flush_jitter = "0s"
  precision = "s"
  debug = true
  quiet = false
  logfile = ""
  hostname = ""
  omit_hostname = true


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb]]
  ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
  urls = ["http://influxSNMP:8086"] # required
  ## The target database for metrics (telegraf will create it if not exists).
  database = "grafana" # required

  ## Retention policy to write to. Empty string writes to the default rp.
  retention_policy = ""

  ## Write consistency (clusters only), can be: "any", "one", "quorum", "all"
  write_consistency = "any"

  ## Write timeout (for the InfluxDB client), formatted as a string.
  ## If not provided, will default to 5s. 0s means no timeout (not recommended).
  timeout = "5s"

  ## Authentication for InfluxDB
  # username = "user"
  # password = "password"

  ## Set the user agent for HTTP POSTs (can be useful for log differentiation)
  user_agent = "telegraf"


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

## UniFi APs (Gen 2/Gen 3)
## Last update:  11 April 2017
##
[[inputs.snmp]]
  # List of agents to poll
  agents = [ "hallway.dhcp.tiberiansun.us.local", "sunroom.dhcp.tiberiansun.us.local" ]
  # Polling interval
  interval = "10s"
  # Timeout for each SNMP query.
  timeout = "10s"
  # Number of retries to attempt within timeout.
  retries = 3
  # SNMP version, UAP only supports v1
  version = 1
  # SNMP community string.
  community = "crp7nbyertTrfcW54AKnylDURj"
  # The GETBULK max-repetitions parameter
  max_repetitions = 10
  # Measurement name
  name = "snmp.UAP"
  ##
  ## System Details
  ##
  #  System name (hostname)
  [[inputs.snmp.field]]
    is_tag = true
    name = "sysName"
    oid = "RFC1213-MIB::sysName.0"
  #  System vendor OID
  [[inputs.snmp.field]]
    name = "sysObjectID"
    oid = "RFC1213-MIB::sysObjectID.0"
  #  System description
  [[inputs.snmp.field]]
    name = "sysDescr"
    oid = "RFC1213-MIB::sysDescr.0"
  #  System contact
  [[inputs.snmp.field]]
    name = "sysContact"
    oid = "RFC1213-MIB::sysContact.0"
  #  System location
  [[inputs.snmp.field]]
    name = "sysLocation"
    oid = "RFC1213-MIB::sysLocation.0"
  #  System uptime
  [[inputs.snmp.field]]
    name = "sysUpTime"
    oid = "RFC1213-MIB::sysUpTime.0"
  #  UAP model
  [[inputs.snmp.field]]
    name = "unifiApSystemModel"
    oid = "UBNT-UniFi-MIB::unifiApSystemModel"
  #  UAP firmware version
  [[inputs.snmp.field]]
    name = "unifiApSystemVersion"
    oid = "UBNT-UniFi-MIB::unifiApSystemVersion"
  ##
  ## Host Resources
  ##
  #  Total memory
  [[inputs.snmp.field]]
    name = "memTotal"
    oid = "FROGFOOT-RESOURCES-MIB::memTotal.0"
  #  Free memory
  [[inputs.snmp.field]]
    name = "memFree"
    oid = "FROGFOOT-RESOURCES-MIB::memFree.0"
  #  Buffer memory
  [[inputs.snmp.field]]
    name = "memBuffer"
    oid = "FROGFOOT-RESOURCES-MIB::memBuffer.0"
  #  Cache memory
  [[inputs.snmp.field]]
    name = "memCache"
    oid = "FROGFOOT-RESOURCES-MIB::memCache.0"
  #  Per-interface traffic, errors, drops
  [[inputs.snmp.table]]
    oid = "IF-MIB::ifTable"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "IF-MIB::ifDescr"
  ##
  ## Interface Details & Metrics
  ##
  #  Wireless interfaces
  [[inputs.snmp.table]]
    oid = "UBNT-UniFi-MIB::unifiRadioTable"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "UBNT-UniFi-MIB::unifiRadioName"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "UBNT-UniFi-MIB::unifiRadioRadio"
  #  BSS instances
  [[inputs.snmp.table]]
    oid = "UBNT-UniFi-MIB::unifiVapTable"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "UBNT-UniFi-MIB::unifiVapName"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "UBNT-UniFi-MIB::unifiVapRadio"
  #  Ethernet interfaces
  [[inputs.snmp.table]]
    oid = "UBNT-UniFi-MIB::unifiIfTable"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "UBNT-UniFi-MIB::unifiIfName"
  ##
  ## System Performance
  ##
  #  System load averages
  [[inputs.snmp.table]]
    oid = "FROGFOOT-RESOURCES-MIB::loadTable"
    [[inputs.snmp.table.field]]
      is_tag = true
      oid = "FROGFOOT-RESOURCES-MIB::loadDescr"
  ##
  ## SNMP metrics
  ##
  #  Number of SNMP messages received
  [[inputs.snmp.field]]
    name = "snmpInPkts"
    oid = "SNMPv2-MIB::snmpInPkts.0"
  #  Number of SNMP Get-Request received
  [[inputs.snmp.field]]
    name = "snmpInGetRequests"
    oid = "SNMPv2-MIB::snmpInGetRequests.0"
  #  Number of SNMP Get-Next received
  [[inputs.snmp.field]]
    name = "snmpInGetNexts"
    oid = "SNMPv2-MIB::snmpInGetNexts.0"
  #  Number of SNMP objects requested
  [[inputs.snmp.field]]
    name = "snmpInTotalReqVars"
    oid = "SNMPv2-MIB::snmpInTotalReqVars.0"
  #  Number of SNMP Get-Response received
  [[inputs.snmp.field]]
    name = "snmpInGetResponses"
    oid = "SNMPv2-MIB::snmpInGetResponses.0"
  #  Number of SNMP messages sent
  [[inputs.snmp.field]]
    name = "snmpOutPkts"
    oid = "SNMPv2-MIB::snmpOutPkts.0"
  #  Number of SNMP Get-Request sent
  [[inputs.snmp.field]]
    name = "snmpOutGetRequests"
    oid = "SNMPv2-MIB::snmpOutGetRequests.0"
  #  Number of SNMP Get-Next sent
  [[inputs.snmp.field]]
    name = "snmpOutGetNexts"
    oid = "SNMPv2-MIB::snmpOutGetNexts.0"
  #  Number of SNMP Get-Response sent
  [[inputs.snmp.field]]
    name = "snmpOutGetResponses"
    oid = "SNMPv2-MIB::snmpOutGetResponses.0"

## Switch SNMP table
##
[[inputs.snmp]]
    agents = [ "10.27.200.2","10.27.200.200" ]
    version = 2
    community = "w-KMvofc$Ot4GwRA4IZ+"
    interval = "60s"
    timeout = "10s"
    retries = 3
    name = "snmpSwitch"

    [[inputs.snmp.field]]
        name = "hostname"
        oid = "RFC1213-MIB::sysName.0"
        is_tag = true

    [[inputs.snmp.field]]
        name = "uptime"
        oid = "DISMAN-EXPRESSION-MIB::sysUpTimeInstance"

    #If the switch has a fan, we can poll data from here
    [[inputs.snmp.table]]
      name = "sensor"
      inherit_tags = [ "hostname" ]
      oid = "ENTITY-SENSOR-MIB::entPhySensorTable"

      [[inputs.snmp.table.field]]
        name = "entPhySensorUnitsDisplay"
        oid = "ENTITY-SENSOR-MIB::entPhySensorUnitsDisplay"
        is_tag = true

    # IF-MIB::ifTable contains counters on input and output traffic as well as errors and discards.
    [[inputs.snmp.table]]
        name = "interface"
        inherit_tags = [ "hostname" ]
        oid = "IF-MIB::ifTable"

        # Interface tag - used to identify interface in metrics database
        [[inputs.snmp.table.field]]
            name = "ifDescr"
            oid = "IF-MIB::ifDescr"
            is_tag = true

    # IF-MIB::ifXTable contains newer High Capacity (HC) counters that do not overflow as fast for a few of the ifTable counters
    [[inputs.snmp.table]]
        name = "interface"
        inherit_tags = [ "hostname" ]
        oid = "IF-MIB::ifXTable"

        # Interface tag - used to identify interface in metrics database
        [[inputs.snmp.table.field]]
            name = "ifDescr"
            oid = "IF-MIB::ifDescr"
            is_tag = true

        [[inputs.snmp.table.field]]
            name = "ifAlias"
            oid = "IF-MIB::ifAlias"
            is_tag = true

    # EtherLike-MIB::dot3StatsTable contains detailed ethernet-level information about what kind of errors have been logged on an interface (such as FCS error, fra$
    [[inputs.snmp.table]]
        name = "interface"
        inherit_tags = [ "hostname" ]
        oid = "EtherLike-MIB::dot3StatsTable"

        # Interface tag - used to identify interface in metrics database
        [[inputs.snmp.table.field]]
            name = "ifDescr"
            oid = "IF-MIB::ifDescr"
            is_tag = true
