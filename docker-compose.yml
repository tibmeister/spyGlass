version: "3.3"

networks:
  net:
    driver: overlay
    attachable: true

volumes:
    prometheus: {}
    alertmanager: {}
    influxSNMP: {}
    influx-pfSense: {}

configs:
  node_rules:
    file: /nfs/swarm/dockerfiles/spyGlass/spyGlass-prometheus/rules/swarm_node.rules.yml
  task_rules:
    file: /nfs/swarm/dockerfiles/spyGlass/spyGlass-prometheus/rules/swarm_task.rules.yml

services:
  cadvisor:
    image: google/cadvisor
    networks:
      - net
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 8M

  grafana:
    image: tibmeister/spyglass_grafana
    networks:
      - net
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=natel-usgs-datasource
      #- GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL:-localhost}
      #- GF_SMTP_ENABLED=${GF_SMTP_ENABLED:-false}
      #- GF_SMTP_FROM_ADDRESS=${GF_SMTP_FROM_ADDRESS:-grafana@test.com}
      #- GF_SMTP_FROM_NAME=${GF_SMTP_FROM_NAME:-Grafana}
      #- GF_SMTP_HOST=${GF_SMTP_HOST:-smtp:25}
      #- GF_SMTP_USER=${GF_SMTP_USER}
      #- GF_SMTP_PASSWORD=${GF_SMTP_PASSWORD}
    volumes:
      - /nfs/swarm/spyGlassData/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    logging:
      driver: json-file
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  alertmanager:
    image: tibmeister/spyglass_am
    networks:
      - net
    environment:
      - SLACK_URL=${SLACK_URL:-https://hooks.slack.com/services/TOKEN}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-general}
      - SLACK_USER=${SLACK_USER:-alertmanager}
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    volumes:
      - alertmanager:/alertmanager
    ports:
      - 9093:9093
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 12M
        reservations:
          memory: 8M

  unsee:
    image: cloudflare/unsee:v0.8.0
    networks:
      - net
    environment:
      - "ALERTMANAGER_URIS=default:http://alertmanager:9093"
    ports:
      - 9080:8080
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 12M
        reservations:
          memory: 8M

  node-exporter:
    image: tibmeister/spyglass-node-exporter
    networks:
      - net
    environment:
      - NODE_ID={{.Node.ID}}
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc/hostname:/etc/nodename
    command:
      - '--path.sysfs=/host/sys'
      - '--path.procfs=/host/proc'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      # no collectors are explicitely enabled here, because the defaults are just fine,
      # see https://github.com/prometheus/node_exporter
      # disable ipvs collector because it barfs the node-exporter logs full with errors on my centos 7 vm's
      - '--no-collector.ipvs'
    deploy:
      mode: global
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 12M
        reservations:
          memory: 8M

  graphiterrd:
    image: graphiteapp/graphite-statsd:1.1.6-1
    networks:
      - net
    ports:
      - 9280:80
      - 9281:81
      - 8225:8125/udp
      - 8226:8126
      - 2203:2003
    volumes:
      - type: bind
        source: /home/ubuntu/speedtest-cli/rrd
        target: /opt/graphite/storage/rrd
    deploy:
      placement:
        constraints:
          - node.hostname==opti.mus.tiberiansun.us
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 16M

  speedtest-dvn:
    image: graphiteapp/graphite-statsd:1.1.6-1
    networks:
      - net
    ports:
      - 9282:80
    volumes:
      - type: bind
        source: /home/ubuntu/speedtest-cli/rrd_dvn
        target: /opt/graphite/storage/rrd
    deploy:
      placement:
        constraints:
          - node.hostname==opti.mus.tiberiansun.us
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 16M

  graphite:
    image: graphiteapp/graphite-statsd:1.1.6-2
    networks:
      - net
    ports:
      - 80:80
      - 2003:2003
      - 2004:2004
      - 2023:2023
      - 2024:2024
      - 8125:8125/udp
      - 8126:8126
    volumes:
      - type: bind
        source: /nfs/swarm/spyGlassData/graphite/conf
        target: /opt/graphite/conf
      - type: bind
        source: /nfs/swarm/spyGlassData/graphite/storage
        target: /opt/graphite/storage
      - type: bind
        source: /nfs/swarm/spyGlassData/statsd/config
        target: /opt/statsd/config
    deploy:
      mode: replicated
      replicas: 1 
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  influx-pfSense:
    image: influxdb:1.7.7
    networks:
      - net
    environment:
      - INFLUXDB_DB=pfSense-cheron
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - influx-pfSense:/var/lib/influxdb
    ports:
      - 8084:8086
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  influxSNMP:
    image: influxdb:1.7.7
    networks:
      - net
    environment:
      - INFLUXDB_DB=grafana
      - INFLUXDB_HTTP_AUTH_ENABLED=false
    volumes:
      - influxSNMP:/var/lib/influxdb
    ports:
      - 8086:8086
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 24M

  telegraf:
    image: nuntz/telegraf-snmp
    depends_on:
      - influxSNMP
    networks:
      - net
    volumes:
      - type: bind
        source: /nfs/swarm/dockerfiles/spyGlass/spyGlass-telegraf/mibs
        target: /root/.snmp/mibs
      - type: bind
        source: /nfs/swarm/dockerfiles/spyGlass/spyGlass-telegraf/telegraf
        target: /etc/telegraf
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 8M

  prometheus:
    image: tibmeister/spyglass-prometheus
    networks:
      - net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=24h'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: node_rules
        target: /etc/prometheus/swarm_node.rules.yml
      - source: task_rules
        target: /etc/prometheus/swarm_task.rules.yml
    ports:
      - 9090:9090
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role != manager
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 128M
